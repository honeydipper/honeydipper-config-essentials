---
systems:
  kubernetes:
    data:
      kubernetes:
        namespace: default

    functions:
      recycleDeployment:
        driver: kubernetes
        rawaction: recycleDeployment
        parameters:
          source: $sysData.source
          namespace: $?sysData.namespace
          deployment: $ctx.deployment

      createJob:
        driver: kubernetes
        rawAction: createJob
        parameters:
          source: $sysData.source
          namespace: $?sysData.namespace
          job: $ctx.job
        export:
          jobid: $data.metadata.name

      waitForJob:
        driver: kubernetes
        rawAction: waitForJob
        parameters:
          source: $sysData.source
          namespace: $?sysData.namespace
          job: $ctx.jobid
          timeout: '{{ default "60" .ctx.timeout }}'
        export:
          job_status: '{{ and (eq .labels.status "success") (eq (int .data.status.failed) 0) | ternary "success" "failure" }}'

      getJobLog:
        driver: kubernetes
        rawAction: getJobLog
        parameters:
          source: $sysData.source
          namespace: $?sysData.namespace
          job: $ctx.jobid
        export:
          log: $data.log
