---
workflows:
  start_kube_job:
    on_failure: exit
    steps:
      - description: interpolating predefined variables
        export:
          steps: |
            :yaml:---
            {{- $predefined := .ctx.predefined_steps }}
            {{- range .ctx.steps }}
            {{- if (typeIs "string" .) }}
            - {{ index $predefined . | toJson }}
            {{- else }}
            - {{ toJson . }}
            {{- end }}
            {{- end }}
          env: |
            :yaml:---
            {{- $predefined := .ctx.predefined_env }}
            {{- range .ctx.env }}
            {{- if (typeIs "string" .) }}
            - {{ index $predefined . | toJson }}
            {{- else }}
            - {{ toJson . }}
            {{- end }}
            {{- else }}
            []
            {{- end }}
          volumes: |
            :yaml:---
            {{- $predefined := .ctx.predefined_volumes }}
            {{- range .ctx.volumes }}
            {{- if (typeIs "string" .) }}
            - {{ index $predefined . | toJson }}
            {{- else }}
            - {{ toJson . }}
            {{- end }}
            {{- else }}
            []
            {{- end }}
      - description: build job manifest file
        export:
          jobTemplate: "@:resources/honeydipper-job.yaml.tmpl"
      - call_function: '{{ .ctx.system }}.createJob'
        with:
          job: $ctx.jobTemplate
    no_export:
      - steps
      - env
      - volumes
      - jobTemplate

  run_kubernetes:
    on_failure: exit
    steps:
      - call_workflow: start_kube_job
      - on_failure: continue
        steps:
          - call_function: '{{ .ctx.system }}.waitForJob'
          - call_function: '{{ .ctx.system }}.getJobLog'
