drivers:
  daemon:
    services:
      api:
        auth-providers:
          - auth-simple
        auth:
          casbin:
            models:
              - |
                [request_definition]
                r = sub, obj, act, provider

                [policy_definition]
                p = sub, obj, act, provider

                [role_definition]
                g = _, _
                g2 = _, _
                g3 = _, _

                [policy_effect]
                e = some(where (p.eft == allow))

                [matchers]
                m = (r.sub == p.sub && r.obj == p.obj && r.act == p.act && r.provider == p.provider) \
                  || (g(r.sub, p.sub) && g2(r.obj, p.obj) && r.act == p.act && r.provider == p.provider) \
                  || (g(r.sub, p.sub) && r.obj == p.obj && r.act == p.act && r.provider == p.provider) \
                  || (r.sub == p.sub && g2(r.obj, p.obj) && r.act == p.act && r.provider == p.provider) \
                  || (r.sub == p.sub && r.obj == p.obj && g3(r.act, p.act) && r.provider == p.provider) \
                  || (g(r.sub, p.sub) && g2(r.obj, p.obj) && g3(r.act, p.act) && r.provider == p.provider) \
                  || (g(r.sub, p.sub) && r.obj == p.obj && g3(r.act, p.act) && r.provider == p.provider) \
                  || (r.sub == p.sub && g2(r.obj, p.obj) && g3(r.act, p.act) && r.provider == p.provider) \
                  || (r.sub == p.sub && r.obj == p.obj && g3(r.act, 'read') && p.act == 'write' && r.provider == p.provider) \
                  || (g(r.sub, p.sub) && g2(r.obj, p.obj) && g3(r.act, 'read') && p.act == 'write' && r.provider == p.provider) \
                  || (g(r.sub, p.sub) && r.obj == p.obj && g3(r.act, 'read') && p.act == 'write' && r.provider == p.provider) \
                  || (r.sub == p.sub && g2(r.obj, p.obj) && g3(r.act, 'read') && p.act == 'write' && r.provider == p.provider) \
                  || (g(r.sub, p.sub) && p.obj == 'everything' && r.act == p.act && r.provider == p.provider) \
                  || (r.sub == p.sub && p.obj == 'everything' && r.act == p.act && r.provider == p.provider) \
                  || (g(r.sub, p.sub) && p.obj == 'everything' && g3(r.act, p.act) && r.provider == p.provider) \
                  || (r.sub == p.sub && p.obj == 'everything' && g3(r.act, p.act) && r.provider == p.provider) \
                  || (g(r.sub, p.sub) && p.obj == 'everything' && g3(r.act, 'read') && p.act == 'write' && r.provider == p.provider) \
                  || (r.sub == p.sub && p.obj == 'everything' && g3(r.act, 'read') && p.act == 'write' && r.provider == p.provider) \
                  || (p.sub == 'everyone' && r.obj == p.obj && r.act == p.act && r.provider == p.provider) \
                  || (p.sub == 'everyone' && g2(r.obj, p.obj) && r.act == p.act && r.provider == p.provider) \
                  || (p.sub == 'everyone' && r.obj == p.obj && g3(r.act, p.act) && r.provider == p.provider) \
                  || (p.sub == 'everyone' && g2(r.obj, p.obj) && g3(r.act, p.act) && r.provider == p.provider) \
                  || (p.sub == 'everyone' && r.obj == p.obj && g3(r.act, 'read') && p.act == 'write' && r.provider == p.provider) \
                  || (p.sub == 'everyone' && g2(r.obj, p.obj) && g3(r.act, 'read') && p.act == 'write' && r.provider == p.provider) \
                  || (p.sub == 'everyone' && p.obj == 'everything' && r.act == p.act && r.provider == p.provider) \
                  || (p.sub == 'everyone' && p.obj == 'everything' && g3(r.act, p.act) && r.provider == p.provider) \
                  || (p.sub == 'everyone' && p.obj == 'everything' && g3(r.act, 'read') && p.act == 'write' && r.provider == p.provider) \
                  || (r.sub == 'admin')

            policies:
              - |
                # define action groups
                g3, GET, read
                g3, POST, write
                g3, PUT, write

                # define basic policy effects
                p, viewer, everything, read, auth-simple
                p, editor, everything, write, auth-simple
                p, everyone, everything, write, auth-gcp-iap
