---
workflows:
  use_google_credentials:
    if:
      - $?ctx.google_credentials_berglas_secret
    export:
      berglas_files+:
        - file: /honeydipper/.config/gcloud/secret/service-account.json
          secret: $ctx.google_credentials_berglas_secret
          mode: "600"
      env+:
        - gcloud_config
      steps+:
        - gcloud_auth
    else:
      if:
        - $?ctx.google_credentials_secret
      export:
        env+:
          - gcloud_config
        steps+:
          - gcloud_auth_with_k8s_secret

    meta:
      description:
        - >
          This workflow will add a step into :code:`steps` context variable so
          the following :code:`run_kubernetes` workflow can use default google credentials,
          specify a credential through a k8s secret, or use `berglas <https://github.com/GoogleCloudPlatform/berglas>`_ to fetch the credentials
          at runtime(recommended).

        - highlight: >
            It is recommended to always use this with :code:`run_kubernetes` workflow if
            :code:`gcloud` steps are used

      inputs:
        - name: google_credentials_secret
          description: The name of the k8s secret storing the service account key
        - name: google_credentials_berglas_secret
          description: The name of the secret to be fetched using berglas, if no secrets is specified, use default service account

      notes:
        - For example
        - example: |
            ---
            workflows:
              run_gke_job:
                steps:
                  - call_workflow: use_google_credentials
                    with:
                      google_credentials_secret: my_k8s_secret
                  - call_workflow: run_kubernetes
                    with:
                      # notice we use append modifier here ("+") so
                      # steps pre-configured through :code:`use_google_credentials`
                      # wont be overwritten.
                      steps+:
                        - type: gcloud
                          shell: gcloud compute disks list
        - An example with berglas secret
        - example: |
            ---
            workflows:
              run_my_job:
                with:
                  google_credentials_berglas_secret: sm://my-gcp-project/my-service-account-secret
                steps:
                  - call_workflow: use_google_credentials
                  - call_workflow: run_kubernetes
                    with:
                      steps+:
                        - type: gcloud
                          shell: gcloud compute disks list
                  - call_workflow: use_google_credentials
                  - call_workflow: run_kubernetes
                    with:
                      steps+:
                        - type: gcloud
                          shell: gsutil ls gs://mybucket

  use_gcloud_kubeconfig:
    export:
      steps+:
        - name: get-kubeconfig-{{ default "local" .ctx.cluster.project }}-{{ .ctx.cluster.cluster }}
          use: gcloud_kubeconfig
          env:
            - name: CLUSTER
              value: $ctx.cluster.cluster
            - name: PROJECT
              value: $?ctx.cluster.project
            - name: ZONE
              value: $?ctx.cluster.zone
            - name: REGION
              value: $?ctx.cluster.region

    meta:
      description:
        - >
          This workflow will add a step into :code:`steps` context variable so
          the following :code:`run_kubernetes` workflow can use :code:`kubectl` with gcloud
          service account credential

      inputs:
        - name: cluster
          description: A object with :code:`cluster` field and optionally, :code:`project`, :code:`zone`, and :code:`region` fields

      notes:
        - The workflow will add a step to run :code:`gcloud container clusters get-credentials` to populate the kubeconfig file.
        - example: |
            ---
            workflows:
              run_gke_job:
                steps:
                  - call_workflow: use_google_credentials
                  - call_workflow: use_gcloud_kubeconfig
                    with:
                      cluster:
                        cluster: my-cluster
                  - call_workflow: run_kubernetes
                    with:
                      steps+:
                        - type: gcloud
                          shell: kubectl get deployments
