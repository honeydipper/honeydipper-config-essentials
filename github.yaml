---
systems:
  github:
    data:
      oauth_token: _place_holder_
      token: _place_holder_
      path: "/github/push"

    functions:
      api:
        driver: web
        rawAction: request
        parameters:
          URL: https://api.github.com/{{ .wfdata.resource_path }}
          header:
            Authorization: token {{ .sysData.oauth_token }}
            Accept: application/vnd.github.v3+json
            Content-Type: application/json; charset=utf-8

      createStatus:
        target:
          system: github
          function: api
        parameters:
          URL: 'https://api.github.com/repos/{{ .ctx.git_repo }}/statuses/{{ .ctx.git_commit }}'
          method: POST
          content: '{{ set .ctx.status "context" (coalesce .ctx.context .sysData.context "Honeydipper") | toJson }}'

      createComment:
        target:
          system: github
          function: api
        parameters:
          URL: 'https://api.github.com/repos/{{ .ctx.git_repo }}/issues/{{ .ctx.git_issue }}/comments'
          method: POST
          content: '{{ dict "body" .ctx.message | toJson }}'

      getContent:
        target:
          system: github
          function: api
        parameters:
          URL: 'https://api.github.com/repos/{{ .ctx.git_repo }}/contents/{{ .ctx.path }}{{ if .ctx.git_ref }}?ref={{ .ctx.git_ref }}{{ end }}'
          method: GET
        export:
          file_content: '{{ b64dec .data.json.content }}'

    triggers:
      hit:
        driver: webhook
        if_match:
          method: POST
          form:
            token: '{{ .sysData.token }}'
          url: '{{ .sysData.path }}'

      push:
        source:
          system: github
          trigger: hit
        if_match:
          headers:
            X-Github-Event: push
        export:
          git_repo: $event.json.repository.full_name
          git_ref: $event.json.ref
          git_commit: $event.json.head
          commits: $event.json.commits

      pull_request:
        source:
          system: github
          trigger: hit
        if_match:
          headers:
            X-Github-Event: pull_request
          json:
            action: opened
        export:
          git_issue: $event.json.number
          git_repo: $event.json.repository.full_name
          git_ref: $event.json.pull_request.base.ref
          git_commit: $event.json.pull_request.head.sha
          git_title: $event.json.pull_request.title
          git_user: $event.json.pull_request.user

      pr_comment:
        source:
          system: github
          trigger: hit
        if_match:
          headers:
            X-Github-Event: issue_comment
          json:
            action: created
            issue:
              pull_request:
                url: :regex:.+
        export:
          git_issue: $event.json.issue.number
          git_repo: $event.json.repository.full_name
          git_message: $event.json.comment.body
          git_user: $event.json.comment.user

rules:
  - when:
      source:
        system: github
        trigger: hit
    do: {}
