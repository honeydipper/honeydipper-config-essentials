---
systems:
  slack:
    data:
      url: _place_holder_
      slash_token: _place_holder_

    functions:
      reply:
        driver: web
        rawAction: request
        parameters:
          URL: $ctx.response_url
          header:
            Content-Type: application/json
          method: POST
          content:
            attachments:
              - title: $?ctx.chat_title
                color: '{{ index .ctx.chat_colors .ctx.message_type }}'
                text: $ctx.message
      say:
        target:
          system: slack
          function: reply
        parameters:
          URL: $sysData.url
          content:
            channel: $ctx.channel_id

    triggers:
      slashcommand:
        driver: webhook
        if_match:
          method: POST
          form:
            token: $sysData.slash_token
          url: "/slack/slashcommand"
        export:
          response_url: $event.form.response_url.0
          text: $event.form.text.0
          channel_name: $event.form.channel_name.0
          channel_id: $event.form.channel_id.0
          user_name: $event.form.user_name.0
          command: '{{ splitList " " (index .event.form.text 0) | first }}'
          parameters: '{{ (splitn " " 2 (index .event.form.text 0))._1 }}'

  slack_bot:
    data:
      url: https://slack.com/api/chat.postMessage
      token: _place_holder_
      interact_token: _place_holder_
    extends:
      - slack

    triggers:
      interact:
        driver: webhook
        if_match:
          method: POST
          url: "/slack/interact"
          form:
            token: $sysData.interact_token
        export:
          slack_payload: :yaml:{{ index .event.form.payload 0 | replace "\\n" "\n" | replace "\\/" "/" }}

    functions:
      say:
        parameters:
          header:
            Authorization: 'Bearer {{ .sysData.token }}'
