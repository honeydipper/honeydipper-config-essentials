---
systems:
  opsgenie:
    data:
      API_KEY: _place_holder_
      token: _place_holder_
      path: "/opsgenie"

    functions:
      snooze:
        driver: web
        rawAction: request
        parameters:
          URL: https://api.opsgenie.com/v2/alerts/{{ .ctx.alert_Id }}/snooze
          header:
            Content-Type: application/json
            Authorization: GenieKey {{ .sysData.API_KEY }}
          method: POST
          content:
            endTime: '{{ now.UTC.Add ( duration (default "+20m" .ctx.duration) ) | ISO8601 }}'
            user: honeydipper
            source: honeydipper
            notes: snoozed due to honeydipper automation
        export:
          result: $data.json.result

      heartbeat:
        driver: web
        rawAction: request
        parameters:
          URL: https://api.opsgenie.com/v2/heartbeats/{{ .ctx.heartbeat }}/ping
          method: GET
          header:
            Authorization: GenieKey {{ .sysData.API_KEY }}
        export:
          result: $data.json.result

    triggers:
      alert:
        driver: webhook
        if_match:
          method: POST
          form:
            token: $sysData.token
          url: '/opsgenie'
        export:
          alert_message: $event.json.alert.message
          alert_alias: $event.json.alert.alias
          alert_Id: $event.json.alert.alertId
          alert_system: "opsgenie"
          alert_url: "https://opsg.in/a/i/{{ .event.json.alert.alertId }}"
          _event_id: $event.json.alert.alertId
          _event_detail: |-
            {{ .event.json.alert.message }}
            {{ .event.json.alert.alias }}
          _event_url: "https://opsg.in/a/i/{{ .event.json.alert.alertId }}"
